[
    {
        "title": "Mi sitio web personal",
        "image": "./images/project08.jpg",
        "html": "<p>Esta página fue desarrollada con Gatsby framework (React, node.js) usando <a href='https://github.com/codebushi/gatsby-starter-forty'>este starter</a>. <br/>Adapté el tema a mis necesidades y agregué/modifiqué varios componentes (<a href='/es/timeline#two'>Timeline</a>, Banner).",
        "source": "https://github.com/nahueespinosa/my-site",
        "tags": ["Javascript", "node.js", "React", "GraphQL", "HTML", "CSS"]
    },
    {
        "title": "Visual graph search",
        "image": "./images/project07.jpg",
        "html": "<p>Este es un juego que permite visualizar conceptos y jugar con algoritmos de búsqueda para estructuras de datos con grafos. La interfaz está implementada con PyGame, y permite dibujar muros y seleccionar las posiciones iniciales y finales.</p><p>Comencé este proyecto inspirado por el curso <a href='https://github.com/nahueespinosa/ai50'>Introduction to Artificial Intelligence</a> de <a href='https://cs50.harvard.edu/ai/2020/'>CS50</a>, y el objetivo principal fue evaluar las diferencias entre los algoritmos BFS, DFS, greedy-BFS and A* con distintas funciones de costo.</p>",
        "source": "https://github.com/nahueespinosa/visual_graph_search",
        "tags": ["Python", "PyGame", "OOP", "AI"]
    },
    {
        "title": "sAPI port para placa Blue Pill",
        "image": "./images/project05.jpg",
        "html": "<p>Port de la librería sAPI a la <a href='https://stm32-base.org/boards/STM32F103C8T6-Blue-Pill.html'>placa STM32F103C8 Blue Pill</a>. Funciona como una HAL (Capa de Abstracción de Hardware) para microcontroladores usada en el <a href='http://www.proyecto-ciaa.com.ar/'>proyecto CIAA</a>.</p><p>Proporciona un buen punto de entrada para estudiantes al mundo de los sistemas embebidos.</p>",
        "source": "https://github.com/nahueespinosa/sapi_bluepill",
        "tags": ["ST Microcontrollers", "C", "STM32CubeIDE"]
    },
    {
        "title": "Placa base para STM32F4DISCOVERY",
        "image": "./images/project04.jpg",
        "html": "<p>Diseño de PCB de una placa base para el <a href='https://www.st.com/en/evaluation-tools/stm32f4discovery.html'>kit de desarrollo STM32F4DISCOVERY</a>. Incluye los siguientes periféricos: potenciómetro, teclado, display LCD, encoder, LED RGB, buzzer piezoeléctrico, salidas aisladas (optoacoplador), zócalo micro SD, ESP8266, entradas analógicas 4-20mA.</p>",
        "tags": ["Proteus Design Suite", "ST Microcontrollers"]
    },
    {
        "title": "Medidor de energía",
        "image": "./images/project03.jpg",
        "html": " <p>Diseño y desarrollo de un dispositivo capaz de medir parámetros eléctricos como potencia activa, tensión y corriente instantáneas, factor de potencia y energía.</p><p>Posee almacenamiento interno y un servidor web integrado para acceder a la información en tiempo real. Los principales chips usados fueron LPC1769, ESP8266, ATM90E36A. Conectividad: Ethernet, WiFi, Modbus.</p><p>Permite visualizar los datos en tiempo real, analizar registros históricos y generar alertas de usuario basadas en la configuración.</p>",
        "tags": ["LPCOpen", "C", "FreeRTOS", "uIP", "Modbus", "Altium Designer"]
    },
    {
        "title": "Sistema de asiento de vehículo",
        "image": "./images/project02.jpg",
        "html": "<p>Implementación de un sistema de control de asiento de un vehículo con sensor de temperatura, calentador y sensor de presencia. Dos asientos conectados a través de un bus LIN, y comunicación CAN con el resto del vehículo.</p><p>Para la comunicación LIN se utilizó la UART2 del microcontrolador con un transceiver <a href='http://www.ti.com/lit/ds/symlink/tpic1021.pdf?&ts=1589836790029'>TPIC1021DR</a>. Y para el bus CAN se utilizó el transceiver <a href='https://www.ti.com/product/SN65HVD1040'>SN65HVD1040</a>.</p>",
        "tags": ["CMSIS", "FreeRTOS", "C", "LIN", "CAN"]
    },
    {
        "title": "Sistema de localización de vehículos",
        "image": "./images/project01.jpg",
        "html": "<p>Diseño y desarrollo de un rastreador cuya función principal es localizar y mostrar información de múltiples vehículos. Usamos un módulo <a href='https://www.itead.cc/sim908-gsm-gprs-gps-module.html'>SIM908</a> con una interfaz de comandos AT para enviar la posición GPS sobre GPRS a una aplicación backend.</p><p>La aplicación recibe los datos de varios dispositivos y genera un mapa con geocercas configurables. Se almacena todo en una base de datos SQLite para un posterior análisis.</p>",
        "tags": ["FreeRTOS", "GPS/GPRS", "C", "C++", "QtCreator", "SQL"]
    }
]